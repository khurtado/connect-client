# used by connect-client, a repo that includes connect-command
# as a submodule.

pyversions=${PYVERSIONS-27 2.7 - 26 2.6}

versions () {
	for version in $pyversions; do
		if [ "$version" = "-" ]; then
			version=
		fi
		echo $1$version
	done
}

# Figure out where the correct pip is
for pip in $(versions pip); do
	$pip --version >/dev/null 2>&1 && break
	pip=
done

# Figure out where the correct python is
for python in $(versions python); do
	$python --version >/dev/null 2>&1 && break
	python=
done

install_connect () {
	copyfiles . "$base/."
	sed -e "s/@@version@@/$version/" \
		< lib/connect/extensions/client.py \
		> ${base}/lib/connect/extensions/client.py
	sed -e "s/@@python@@/$python/" \
		< bin/connect \
		> ${base}/bin/connect
}

test_paramiko () {
	env "PYTHONPATH=$target" $python >/dev/null 2>&1 <<EOF
import sys
try:
	import warnings
	with warnings.catch_warnings():
		warnings.simplefilter("ignore")
	import paramiko
	sys.exit(0)
except ImportError:
	sys.exit(255)
EOF
}

install_paramiko () {
	builddir=${HOME}/.tmp/pip-build
	rm -rf "${builddir}"
	mkdir -p "${builddir}"

	if [ -z "$pip" ]; then
		code=$?
		echo >&2 "== No pip program available - installation failed."

	elif [ -z "$python" ]; then
		code=$?
		echo >&2 "== No python program available - installation failed."

	else
		lib=$($python -c "import sys; print 'python%d.%d/site-packages' % (sys.version_info[0], sys.version_info[1])")
		target="$base/lib/$lib"
		(
			$pip install \
				--log="${builddir}/log" \
				-b "${builddir}" \
				--target="$target" \
				paramiko \
		) > pip.log 2>&1 ||
		{ code=$?; echo "== Do you need to load a python module?"; }
		rm -rf "${builddir}"

	fi
}

status ... connect command
install_connect

status "... paramiko (for connect command)"
if test_paramiko; then
	echo "== Paramiko already present"
else
	install_paramiko
	if test_paramiko; then
		code=$?
		echo '== Paramiko installed.'
	else
		code=$?
		echo '== Paramiko installation failed.'
	fi
fi
